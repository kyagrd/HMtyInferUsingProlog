\section{Related Work}\label{sec:relwork}
The idea of using logic programming to specify type inference is not new.
\citet*{HMX99} defined a general framework called \HMX\ for specifying
extensions of HM (e.g., records, type classes, intersection types)
and \citet{tyinferCHR02} implemented \HMX\ using Prolog with
constraint handling rules (CHR).

TODO there are several work on implementing type infer
inference using logic programming so called $\mathrm{HM}(\mathcal{X})$
framework such as intersection types
using CLP and GADTs with CHR.
The situation I understand is that work around HM(X) does not consider
type constructor polymorphism.

TODO
$\alpha$Prolog
TODO\\
TODO\\
TODO\\
TODO\\
TODO\\
TODO\\
TODO\\

